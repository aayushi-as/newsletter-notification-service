/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.project.newsletter.dto;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EmployeeAVRO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6699887930225943489L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EmployeeAVRO\",\"namespace\":\"com.project.newsletter.dto\",\"fields\":[{\"name\":\"emailId\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"department\",\"type\":\"string\"},{\"name\":\"eventName\",\"type\":\"string\"},{\"name\":\"eventDesc\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EmployeeAVRO> ENCODER =
      new BinaryMessageEncoder<EmployeeAVRO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EmployeeAVRO> DECODER =
      new BinaryMessageDecoder<EmployeeAVRO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<EmployeeAVRO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<EmployeeAVRO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EmployeeAVRO>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this EmployeeAVRO to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a EmployeeAVRO from a ByteBuffer. */
  public static EmployeeAVRO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence emailId;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence department;
  @Deprecated public java.lang.CharSequence eventName;
  @Deprecated public java.lang.CharSequence eventDesc;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EmployeeAVRO() {}

  /**
   * All-args constructor.
   * @param emailId The new value for emailId
   * @param name The new value for name
   * @param department The new value for department
   * @param eventName The new value for eventName
   * @param eventDesc The new value for eventDesc
   */
  public EmployeeAVRO(java.lang.CharSequence emailId, java.lang.CharSequence name, java.lang.CharSequence department, java.lang.CharSequence eventName, java.lang.CharSequence eventDesc) {
    this.emailId = emailId;
    this.name = name;
    this.department = department;
    this.eventName = eventName;
    this.eventDesc = eventDesc;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return emailId;
    case 1: return name;
    case 2: return department;
    case 3: return eventName;
    case 4: return eventDesc;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: emailId = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: department = (java.lang.CharSequence)value$; break;
    case 3: eventName = (java.lang.CharSequence)value$; break;
    case 4: eventDesc = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'emailId' field.
   * @return The value of the 'emailId' field.
   */
  public java.lang.CharSequence getEmailId() {
    return emailId;
  }

  /**
   * Sets the value of the 'emailId' field.
   * @param value the value to set.
   */
  public void setEmailId(java.lang.CharSequence value) {
    this.emailId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'department' field.
   * @return The value of the 'department' field.
   */
  public java.lang.CharSequence getDepartment() {
    return department;
  }

  /**
   * Sets the value of the 'department' field.
   * @param value the value to set.
   */
  public void setDepartment(java.lang.CharSequence value) {
    this.department = value;
  }

  /**
   * Gets the value of the 'eventName' field.
   * @return The value of the 'eventName' field.
   */
  public java.lang.CharSequence getEventName() {
    return eventName;
  }

  /**
   * Sets the value of the 'eventName' field.
   * @param value the value to set.
   */
  public void setEventName(java.lang.CharSequence value) {
    this.eventName = value;
  }

  /**
   * Gets the value of the 'eventDesc' field.
   * @return The value of the 'eventDesc' field.
   */
  public java.lang.CharSequence getEventDesc() {
    return eventDesc;
  }

  /**
   * Sets the value of the 'eventDesc' field.
   * @param value the value to set.
   */
  public void setEventDesc(java.lang.CharSequence value) {
    this.eventDesc = value;
  }

  /**
   * Creates a new EmployeeAVRO RecordBuilder.
   * @return A new EmployeeAVRO RecordBuilder
   */
  public static com.project.newsletter.dto.EmployeeAVRO.Builder newBuilder() {
    return new com.project.newsletter.dto.EmployeeAVRO.Builder();
  }

  /**
   * Creates a new EmployeeAVRO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EmployeeAVRO RecordBuilder
   */
  public static com.project.newsletter.dto.EmployeeAVRO.Builder newBuilder(com.project.newsletter.dto.EmployeeAVRO.Builder other) {
    return new com.project.newsletter.dto.EmployeeAVRO.Builder(other);
  }

  /**
   * Creates a new EmployeeAVRO RecordBuilder by copying an existing EmployeeAVRO instance.
   * @param other The existing instance to copy.
   * @return A new EmployeeAVRO RecordBuilder
   */
  public static com.project.newsletter.dto.EmployeeAVRO.Builder newBuilder(com.project.newsletter.dto.EmployeeAVRO other) {
    return new com.project.newsletter.dto.EmployeeAVRO.Builder(other);
  }

  /**
   * RecordBuilder for EmployeeAVRO instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EmployeeAVRO>
    implements org.apache.avro.data.RecordBuilder<EmployeeAVRO> {

    private java.lang.CharSequence emailId;
    private java.lang.CharSequence name;
    private java.lang.CharSequence department;
    private java.lang.CharSequence eventName;
    private java.lang.CharSequence eventDesc;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.project.newsletter.dto.EmployeeAVRO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.emailId)) {
        this.emailId = data().deepCopy(fields()[0].schema(), other.emailId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.department)) {
        this.department = data().deepCopy(fields()[2].schema(), other.department);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventName)) {
        this.eventName = data().deepCopy(fields()[3].schema(), other.eventName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.eventDesc)) {
        this.eventDesc = data().deepCopy(fields()[4].schema(), other.eventDesc);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing EmployeeAVRO instance
     * @param other The existing instance to copy.
     */
    private Builder(com.project.newsletter.dto.EmployeeAVRO other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.emailId)) {
        this.emailId = data().deepCopy(fields()[0].schema(), other.emailId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.department)) {
        this.department = data().deepCopy(fields()[2].schema(), other.department);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventName)) {
        this.eventName = data().deepCopy(fields()[3].schema(), other.eventName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.eventDesc)) {
        this.eventDesc = data().deepCopy(fields()[4].schema(), other.eventDesc);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'emailId' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmailId() {
      return emailId;
    }

    /**
      * Sets the value of the 'emailId' field.
      * @param value The value of 'emailId'.
      * @return This builder.
      */
    public com.project.newsletter.dto.EmployeeAVRO.Builder setEmailId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.emailId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'emailId' field has been set.
      * @return True if the 'emailId' field has been set, false otherwise.
      */
    public boolean hasEmailId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'emailId' field.
      * @return This builder.
      */
    public com.project.newsletter.dto.EmployeeAVRO.Builder clearEmailId() {
      emailId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.project.newsletter.dto.EmployeeAVRO.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.project.newsletter.dto.EmployeeAVRO.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'department' field.
      * @return The value.
      */
    public java.lang.CharSequence getDepartment() {
      return department;
    }

    /**
      * Sets the value of the 'department' field.
      * @param value The value of 'department'.
      * @return This builder.
      */
    public com.project.newsletter.dto.EmployeeAVRO.Builder setDepartment(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.department = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'department' field has been set.
      * @return True if the 'department' field has been set, false otherwise.
      */
    public boolean hasDepartment() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'department' field.
      * @return This builder.
      */
    public com.project.newsletter.dto.EmployeeAVRO.Builder clearDepartment() {
      department = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventName' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventName() {
      return eventName;
    }

    /**
      * Sets the value of the 'eventName' field.
      * @param value The value of 'eventName'.
      * @return This builder.
      */
    public com.project.newsletter.dto.EmployeeAVRO.Builder setEventName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.eventName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'eventName' field has been set.
      * @return True if the 'eventName' field has been set, false otherwise.
      */
    public boolean hasEventName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'eventName' field.
      * @return This builder.
      */
    public com.project.newsletter.dto.EmployeeAVRO.Builder clearEventName() {
      eventName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventDesc' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventDesc() {
      return eventDesc;
    }

    /**
      * Sets the value of the 'eventDesc' field.
      * @param value The value of 'eventDesc'.
      * @return This builder.
      */
    public com.project.newsletter.dto.EmployeeAVRO.Builder setEventDesc(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.eventDesc = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'eventDesc' field has been set.
      * @return True if the 'eventDesc' field has been set, false otherwise.
      */
    public boolean hasEventDesc() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'eventDesc' field.
      * @return This builder.
      */
    public com.project.newsletter.dto.EmployeeAVRO.Builder clearEventDesc() {
      eventDesc = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EmployeeAVRO build() {
      try {
        EmployeeAVRO record = new EmployeeAVRO();
        record.emailId = fieldSetFlags()[0] ? this.emailId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.department = fieldSetFlags()[2] ? this.department : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.eventName = fieldSetFlags()[3] ? this.eventName : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.eventDesc = fieldSetFlags()[4] ? this.eventDesc : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EmployeeAVRO>
    WRITER$ = (org.apache.avro.io.DatumWriter<EmployeeAVRO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EmployeeAVRO>
    READER$ = (org.apache.avro.io.DatumReader<EmployeeAVRO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
